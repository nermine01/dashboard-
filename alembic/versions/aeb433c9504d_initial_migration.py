"""Initial migration

Revision ID: aeb433c9504d
Revises: 
Create Date: 2025-04-03 22:28:13.061835

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'aeb433c9504d'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('campaigns',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('promotion_start_date', sa.Date(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_campaigns_id'), 'campaigns', ['id'], unique=False)
    op.create_table('countries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_countries_id'), 'countries', ['id'], unique=False)
    op.create_table('groups_4',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['groups_4.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_groups_4_id'), 'groups_4', ['id'], unique=False)
    op.create_table('suppliers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('performance_score', sa.Float(), nullable=True),
    sa.Column('on_time_delivery_rate', sa.Float(), nullable=True),
    sa.Column('quality_rating', sa.Float(), nullable=True),
    sa.Column('contract_end_date', sa.Date(), nullable=True),
    sa.Column('current_capacity', sa.Integer(), nullable=True),
    sa.Column('min_capacity_threshold', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_suppliers_id'), 'suppliers', ['id'], unique=False)
    op.create_table('chains',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('country_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['country_id'], ['countries.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_chains_id'), 'chains', ['id'], unique=False)
    op.create_table('groups_3',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['groups_4.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_groups_3_id'), 'groups_3', ['id'], unique=False)
    op.create_table('products',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('expiration_date', sa.Date(), nullable=True),
    sa.Column('end_of_life_date', sa.Date(), nullable=True),
    sa.Column('lifecycle_status', sa.String(length=50), nullable=True),
    sa.Column('recall_status', sa.Boolean(), nullable=True),
    sa.Column('launch_date', sa.Date(), nullable=True),
    sa.Column('stock_level', sa.Integer(), nullable=True),
    sa.Column('reorder_point', sa.Integer(), nullable=False),
    sa.Column('max_stock', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['groups_4.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_products_id'), 'products', ['id'], unique=False)
    op.create_table('alerts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('alert_type', sa.String(), nullable=False),
    sa.Column('message', sa.String(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_alerts_id'), 'alerts', ['id'], unique=False)
    op.create_table('groups_2',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['groups_3.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_groups_2_id'), 'groups_2', ['id'], unique=False)
    op.create_table('locations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('chain_id', sa.Integer(), nullable=True),
    sa.Column('current_stock_level', sa.Integer(), nullable=True),
    sa.Column('max_capacity', sa.Integer(), nullable=True),
    sa.Column('warehouse_threshold', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['chain_id'], ['chains.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_locations_id'), 'locations', ['id'], unique=False)
    op.create_table('groups_1',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['groups_2.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_groups_1_id'), 'groups_1', ['id'], unique=False)
    op.create_table('location_supplier',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=True),
    sa.Column('supplier_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.ForeignKeyConstraint(['supplier_id'], ['suppliers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_location_supplier_id'), 'location_supplier', ['id'], unique=False)
    op.create_table('product_location',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('location_id', sa.Integer(), nullable=True),
    sa.Column('supplier_id', sa.Integer(), nullable=True),
    sa.Column('coordination_group_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['supplier_id'], ['suppliers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_product_location_id'), 'product_location', ['id'], unique=False)
    op.create_table('delivery_schedule',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_location_id', sa.Integer(), nullable=True),
    sa.Column('expected_delivery_date', sa.Date(), nullable=True),
    sa.Column('actual_delivery_date', sa.Date(), nullable=True),
    sa.Column('expected_quantity', sa.Integer(), nullable=True),
    sa.Column('received_quantity', sa.Integer(), nullable=True),
    sa.Column('delivery_status', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['product_location_id'], ['product_location.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_delivery_schedule_id'), 'delivery_schedule', ['id'], unique=False)
    op.create_table('order_proposals',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_location_id', sa.Integer(), nullable=True),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('expected_quantity', sa.Integer(), nullable=True),
    sa.Column('received_quantity', sa.Integer(), nullable=True),
    sa.Column('order_date', sa.Date(), nullable=True),
    sa.Column('received_date', sa.Date(), nullable=True),
    sa.Column('expected_lead_time', sa.Integer(), nullable=True),
    sa.Column('mismatch_tolerance', sa.Float(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['product_location_id'], ['product_location.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_order_proposals_id'), 'order_proposals', ['id'], unique=False)
    op.create_table('product_location_campaign',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_location_id', sa.Integer(), nullable=True),
    sa.Column('campaign_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['campaign_id'], ['campaigns.id'], ),
    sa.ForeignKeyConstraint(['product_location_id'], ['product_location.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_product_location_campaign_id'), 'product_location_campaign', ['id'], unique=False)
    op.create_table('sales_forecasts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_location_id', sa.Integer(), nullable=True),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('forecasted_sales', sa.Integer(), nullable=True),
    sa.Column('actual_sales', sa.Integer(), nullable=True),
    sa.Column('sales_last_year', sa.Integer(), nullable=True),
    sa.Column('seasonal_deviation_threshold', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['product_location_id'], ['product_location.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_sales_forecasts_id'), 'sales_forecasts', ['id'], unique=False)
    op.create_table('transactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_location_id', sa.Integer(), nullable=True),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('sold_quantity', sa.Integer(), nullable=True),
    sa.Column('recorded_stock', sa.Integer(), nullable=True),
    sa.Column('damaged_quantity', sa.Integer(), nullable=True),
    sa.Column('received_quantity', sa.Integer(), nullable=True),
    sa.Column('returned_quantity', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['product_location_id'], ['product_location.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_transactions_id'), 'transactions', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_transactions_id'), table_name='transactions')
    op.drop_table('transactions')
    op.drop_index(op.f('ix_sales_forecasts_id'), table_name='sales_forecasts')
    op.drop_table('sales_forecasts')
    op.drop_index(op.f('ix_product_location_campaign_id'), table_name='product_location_campaign')
    op.drop_table('product_location_campaign')
    op.drop_index(op.f('ix_order_proposals_id'), table_name='order_proposals')
    op.drop_table('order_proposals')
    op.drop_index(op.f('ix_delivery_schedule_id'), table_name='delivery_schedule')
    op.drop_table('delivery_schedule')
    op.drop_index(op.f('ix_product_location_id'), table_name='product_location')
    op.drop_table('product_location')
    op.drop_index(op.f('ix_location_supplier_id'), table_name='location_supplier')
    op.drop_table('location_supplier')
    op.drop_index(op.f('ix_groups_1_id'), table_name='groups_1')
    op.drop_table('groups_1')
    op.drop_index(op.f('ix_locations_id'), table_name='locations')
    op.drop_table('locations')
    op.drop_index(op.f('ix_groups_2_id'), table_name='groups_2')
    op.drop_table('groups_2')
    op.drop_index(op.f('ix_alerts_id'), table_name='alerts')
    op.drop_table('alerts')
    op.drop_index(op.f('ix_products_id'), table_name='products')
    op.drop_table('products')
    op.drop_index(op.f('ix_groups_3_id'), table_name='groups_3')
    op.drop_table('groups_3')
    op.drop_index(op.f('ix_chains_id'), table_name='chains')
    op.drop_table('chains')
    op.drop_index(op.f('ix_suppliers_id'), table_name='suppliers')
    op.drop_table('suppliers')
    op.drop_index(op.f('ix_groups_4_id'), table_name='groups_4')
    op.drop_table('groups_4')
    op.drop_index(op.f('ix_countries_id'), table_name='countries')
    op.drop_table('countries')
    op.drop_index(op.f('ix_campaigns_id'), table_name='campaigns')
    op.drop_table('campaigns')
    # ### end Alembic commands ###
